"""
Django settings for recipes project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from os import path
from pathlib import Path
from decouple import config
import firebase_admin

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3)xbekjxotxgn^n2dkat#ff4+4st_qcctla-t$pp#z)jsmfrog'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    "daphne",
    'django.contrib.staticfiles',

    # css in django
    "tailwind",
    "theme",

    # chatter bot
    "chatterbot.ext.django_chatterbot",

    # elastic search
    "django_elasticsearch_dsl",

    # profiling
    "silk",
    "fcm_django",

    # debug
    "debug_toolbar",

    # web sockets
    "channels",

    #local apps
    "articles_app",
    "chat_app",
    "notifications_app",
    "core",
    "recipes_app",
    "rest_app",
    "users_app",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'silk.middleware.SilkyMiddleware',
]

AUTH_USER_MODEL = "users_app.User"

# django toolbar
MIDDLEWARE = MIDDLEWARE + [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]
INTERNAL_IPS = ("127.0.0.1", "172.17.0.1")

ROOT_URLCONF = 'recipes.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            path.abspath(path.join(BASE_DIR, "templates")),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'recipes.wsgi.application'
ASGI_APPLICATION = 'recipes.asgi.application'
# REDIS_HOST = os.environ.get("REDIS_HOST", "recipes_redis")

# Celery
CELERY_BROKER_URL = config("CELERY_BROKER_URL")
CELERY_RESULT_BACKEND = config("REDIS_BACKEND")

CHANNEL_LAYERS = {
    "default": {
        # for local and DEV envs
        # "BACKEND": "channels.layers.InMemoryChannelLayer",
        # for PROD env use Redis channel
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        'LOCATION': 'redis://127.0.0.1:6379/1',
        "CONFIG": {
            "hosts": [config("REDIS_BACKEND")],
        },
    }
}

LOGIN_REDIRECT_URL = "chat-page"
LOGOUT_REDIRECT_URL = "user-login"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": config("DB_NAME"),
        "USER": config("DB_USER"),
        "PASSWORD": config("DB_PASS"),
        "HOST": config("DB_HOST"),
        "PORT": config("DB_PORT"),
        "default-character-set": "utf8",
    },
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 25
}

# silk for profiling
SILKY_PYTHON_PROFILER = True

# Firebase Cloud Messaging (FCM)
FCM_DJANGO_SETTINGS = {
    "APP_VERBOSE_NAME": "Recipes",
    "ONE_DEVICE_PER_USER": False,
    "DELETE_INACTIVE_DEVICES": False,
    "UPDATE_ON_DUPLICATE_REG_ID": True,
    "USER_MODEL": AUTH_USER_MODEL,
}

cred = firebase_admin.credentials.Certificate(
    cert={
        "type": "service_account",
        "project_id": config("FCM_PROJECT_ID"),
        "private_key_id": config("FCM_PRIVATE_KEY_ID"),
        "private_key": config("FCM_PRIVATE_KEY").replace("\\n", "\n"),
        "client_email": config("FCM_CLIENT_EMAIL"),
        "client_id": config("FCM_CLIENT_ID"),
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "token_uri": "https://oauth2.googleapis.com/token",
        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        "client_x509_cert_url": config("FCM_CLIENT_X509_CERT_URL"),
    }
)
FIREBASE_APP = firebase_admin.initialize_app(cred)

FCM_SEND_REMINDER_N_HOURS_BEFORE = 1
FCM_SEND_NOTIFICATIONS = True
FCM_SEND_CELERY_TASKS_NOTIFICATIONS = True


# Elasticsearch
# https://django-elasticsearch-dsl.readthedocs.io/en/latest/settings.html

ELASTICSEARCH_DSL = {
    "default": {
        "hosts": "https://localhost:9200",
        "http_auth": ("elastic", config("ELASTIC_PASSWORD")),
        "ca_certs": "/Users/pro/Downloads/elasticsearch-8.17.1-3/config/certs/http_ca.crt",
    }
}

# css for django
TAILWIND_APP_NAME = "theme"

# Chatterbot
CHATTERBOT = {
    "name": "User Support Bot",
    "logic_adapters": [
        "chatterbot.logic.BestMatch",
        "chatterbot.logic.TimeLogicAdapter",
    ],
}
